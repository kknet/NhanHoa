//
//  IntroduceHostingViewController.m
//  NhanHoa
//
//  Created by OS on 11/11/19.
//  Copyright Â© 2019 Nhan Hoa. All rights reserved.
//

#import "IntroduceHostingViewController.h"
#import "HostingViewController.h"
#import "HostingPromotionClvCell.h"
#import "HostingSliderClvCell.h"
#import "QuesttionTbvCell.h"

@interface IntroduceHostingViewController ()<UICollectionViewDelegate, UICollectionViewDataSource, UITableViewDelegate, UITableViewDataSource, UIScrollViewDelegate>
{
    AppDelegate *appDelegate;
    float padding;
    float sizeBlock;
    float heightPromotion;
    float heightSlider;
    
    float hSection;
    NSMutableArray *listQuestions;
    int selectedIndex;
    
    UIFont *fontForGetHeight;
    float hTopContent;
    
    UIFont *textFont;
}
@end

@implementation IntroduceHostingViewController

@synthesize scvContent, bgHosting, lbTitle, viewHeader, icBack, lbHeader, icCart, lbCount, viewWindows, imgWindows, lbWindows, viewLinux, imgLinux, lbLinux, viewWordpress, imgWordpress, lbWordpress, clvPromotions, clvSliders, tbQuestions;

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    appDelegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    [self setupUIForView];
}

-(void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear: animated];
    
    lbHeader.text = [appDelegate.localization localizedStringForKey:@"Hosting"];
    [self createListQuestionsIfNeed];
    selectedIndex = -1;
    
    [self setFrameForContentViewWithTableHeight];
}

- (void)setupUIForView
{
    float hStatus = [UIApplication sharedApplication].statusBarFrame.size.height;
    padding = 15.0;
    hSection = 60.0;
    
    textFont = [UIFont fontWithName:RobotoBold size:22.0];
    float sizeIcon = 35.0;
    
    fontForGetHeight = [UIFont fontWithName:RobotoRegular size:22.0];
    if (SCREEN_WIDTH <= SCREEN_WIDTH_IPHONE_5) {
        textFont = [UIFont fontWithName:RobotoBold size:18.0];
        fontForGetHeight = [UIFont fontWithName:RobotoRegular size:16.0];
        sizeIcon = 25.0;
        
    }else if (SCREEN_WIDTH <= SCREEN_WIDTH_IPHONE_6){
        textFont = [UIFont fontWithName:RobotoBold size:20.0];
        fontForGetHeight = [UIFont fontWithName:RobotoRegular size:18.0];
        sizeIcon = 30.0;
        
    }else if (SCREEN_WIDTH <= SCREEN_WIDTH_IPHONE_6PLUS){
        textFont = [UIFont fontWithName:RobotoBold size:22.0];
        fontForGetHeight = [UIFont fontWithName:RobotoRegular size:20.0];
        sizeIcon = 35.0;
    }
    
    if (@available(iOS 11.0, *)) {
        scvContent.contentInsetAdjustmentBehavior = UIScrollViewContentInsetAdjustmentNever;
    }
    scvContent.delegate = self;
    scvContent.backgroundColor = [UIColor colorWithRed:(240/255.0) green:(242/255.0) blue:(244/255.0) alpha:1.0];
    [scvContent mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.left.bottom.right.equalTo(self.view);
    }];
    
    UIImage *imgHosting = [UIImage imageNamed:@"bg_hosting"];
    float hBackground = SCREEN_WIDTH * imgHosting.size.height/imgHosting.size.width;
    bgHosting.backgroundColor = UIColor.clearColor;
    [bgHosting mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.left.equalTo(scvContent);
        make.width.mas_equalTo(SCREEN_WIDTH);
        make.height.mas_equalTo(hBackground);
    }];
    
    [viewHeader mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(scvContent).offset(hStatus);
        make.left.right.equalTo(bgHosting);
        make.height.mas_equalTo(self.navigationController.navigationBar.frame.size.height);
    }];
    
    //  header
    lbHeader.font = textFont;
    [lbHeader mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(viewHeader).offset(hStatus);
        make.centerX.equalTo(viewHeader.mas_centerX);
        make.bottom.equalTo(viewHeader);
        make.width.mas_equalTo(250.0);
    }];
    
    icBack.imageEdgeInsets = UIEdgeInsetsMake(8, 8, 8, 8);
    [icBack mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(viewHeader).offset(5.0);
        make.centerY.equalTo(lbHeader.mas_centerY);
        make.width.height.mas_equalTo(40.0);
    }];
    
    icCart.imageEdgeInsets = UIEdgeInsetsMake(7, 7, 7, 7);
    [icCart mas_makeConstraints:^(MASConstraintMaker *make) {
        make.right.equalTo(viewHeader).offset(-5.0);
        make.centerY.equalTo(lbHeader.mas_centerY);
        make.width.height.mas_equalTo(40.0);
    }];
    
    lbCount.textColor = UIColor.whiteColor;
    lbCount.backgroundColor = ORANGE_COLOR;
    lbCount.layer.cornerRadius = 18.0/2;
    lbCount.clipsToBounds = TRUE;
    lbCount.font = [UIFont fontWithName:RobotoRegular size:textFont.pointSize - 5.0];
    [lbCount mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(icCart);
        make.right.equalTo(icCart);
        make.width.height.mas_equalTo(18.0);
    }];
    
    //  view content
    viewWindows.layer.cornerRadius = viewLinux.layer.cornerRadius = viewWordpress.layer.cornerRadius = 8.0;
    viewWindows.layer.cornerRadius = viewLinux.layer.cornerRadius = viewWordpress.layer.cornerRadius = 8.0;
    
    lbWindows.font = lbLinux.font = lbWordpress.font = [UIFont fontWithName:RobotoMedium size:textFont.pointSize-3];
    lbWindows.textColor = lbLinux.textColor = lbWordpress.textColor = GRAY_80;
    
    sizeBlock = (SCREEN_WIDTH - 4*padding)/3;
    
    UITapGestureRecognizer *tapOnLinux = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(whenTapOnLinuxView)];
    [viewLinux addGestureRecognizer: tapOnLinux];
    [viewLinux mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(bgHosting.mas_bottom).offset(-35.0);
        make.centerX.equalTo(bgHosting.mas_centerX);
        make.width.height.mas_equalTo(sizeBlock);
    }];
    [AppUtils addBoxShadowForView:viewLinux color:GRAY_150 opacity:0.8 offsetX:1.0 offsetY:1.0];
    
    [imgLinux mas_makeConstraints:^(MASConstraintMaker *make) {
        make.centerX.equalTo(viewLinux.mas_centerX);
        make.bottom.equalTo(viewLinux.mas_centerY).offset(-5.0);
        make.width.height.mas_equalTo(sizeIcon);
    }];
    
    [lbLinux mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(imgLinux.mas_bottom).offset(5.0);
        make.left.equalTo(viewLinux).offset(2.0);
        make.right.equalTo(viewLinux).offset(-2.0);
    }];
    
    UITapGestureRecognizer *tapOnWindows = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(whenTapOnWindowsView)];
    [viewWindows addGestureRecognizer: tapOnWindows];
    [viewWindows mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(viewLinux);
        make.right.equalTo(viewLinux.mas_left).offset(-padding);
        make.width.height.mas_equalTo(sizeBlock);
    }];
    [AppUtils addBoxShadowForView:viewWindows color:GRAY_150 opacity:0.8 offsetX:1.0 offsetY:1.0];
    
    [imgWindows mas_makeConstraints:^(MASConstraintMaker *make) {
        make.centerX.equalTo(viewWindows.mas_centerX);
        make.bottom.equalTo(viewWindows.mas_centerY).offset(-5.0);
        make.width.height.mas_equalTo(sizeIcon);
    }];
    
    [lbWindows mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(imgWindows.mas_bottom).offset(5.0);
        make.left.equalTo(viewWindows).offset(2.0);
        make.right.equalTo(viewWindows).offset(-2.0);
    }];
    
    UITapGestureRecognizer *tapOnWordpress = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(whenTapOnWordpressView)];
    [viewWordpress addGestureRecognizer: tapOnWordpress];
    [viewWordpress mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(viewLinux);
        make.left.equalTo(viewLinux.mas_right).offset(padding);
        make.width.height.mas_equalTo(sizeBlock);
    }];
    [AppUtils addBoxShadowForView:viewWordpress color:GRAY_150 opacity:0.8 offsetX:1.0 offsetY:1.0];
    
    [imgWordpress mas_makeConstraints:^(MASConstraintMaker *make) {
        make.centerX.equalTo(viewWordpress.mas_centerX);
        make.bottom.equalTo(viewWordpress.mas_centerY).offset(-5.0);
        make.width.height.mas_equalTo(sizeIcon);
    }];
    
    [lbWordpress mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(imgWordpress.mas_bottom).offset(5.0);
        make.left.equalTo(viewWordpress).offset(2.0);
        make.right.equalTo(viewWordpress).offset(-2.0);
    }];
    
    //  lbtitle
    lbTitle.font = [UIFont fontWithName:RobotoBold size:textFont.pointSize+2];
    [lbTitle mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(bgHosting).offset(padding);
        make.right.equalTo(bgHosting).offset(-padding);
        make.bottom.equalTo(viewLinux.mas_top).offset(-padding);
        make.height.mas_equalTo(30.0);
    }];
    
    //  promotions
    UICollectionViewFlowLayout *layoutPromos = [[UICollectionViewFlowLayout alloc] init];
    layoutPromos.minimumLineSpacing = 0;
    layoutPromos.minimumInteritemSpacing = 0;
    layoutPromos.scrollDirection =  UICollectionViewScrollDirectionHorizontal;
    
    clvPromotions.collectionViewLayout = layoutPromos;
    clvPromotions.delegate = self;
    clvPromotions.dataSource = self;
    [clvPromotions registerNib:[UINib nibWithNibName:@"HostingPromotionClvCell" bundle:nil] forCellWithReuseIdentifier:@"HostingPromotionClvCell"];
    clvPromotions.showsHorizontalScrollIndicator = FALSE;
    clvPromotions.pagingEnabled = TRUE;
    
    UIImage *imgPromotion = [UIImage imageNamed:@"hosting_promotion"];
    heightPromotion = (SCREEN_WIDTH - 2*padding) * imgPromotion.size.height / imgPromotion.size.width;
    clvPromotions.backgroundColor = UIColor.clearColor;
    clvPromotions.layer.cornerRadius = 10.0;
    clvPromotions.clipsToBounds = TRUE;
    [clvPromotions mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(viewLinux.mas_bottom).offset(padding);
        make.left.equalTo(viewWindows);
        make.width.mas_equalTo(SCREEN_WIDTH-2*padding);
        make.height.mas_equalTo(heightPromotion);
    }];
    
    //  sliders
    UICollectionViewFlowLayout *layoutSlider = [[UICollectionViewFlowLayout alloc] init];
    layoutSlider.minimumLineSpacing = 0;
    layoutSlider.minimumInteritemSpacing = 0;
    layoutSlider.scrollDirection =  UICollectionViewScrollDirectionHorizontal;
    
    clvSliders.collectionViewLayout = layoutSlider;
    clvSliders.delegate = self;
    clvSliders.dataSource = self;
    [clvSliders registerNib:[UINib nibWithNibName:@"HostingSliderClvCell" bundle:nil] forCellWithReuseIdentifier:@"HostingSliderClvCell"];
    clvSliders.showsHorizontalScrollIndicator = FALSE;
    clvSliders.pagingEnabled = TRUE;
    
    UIImage *imgSlider = [UIImage imageNamed:@"hosting_slider"];
    float hImgSlider = (SCREEN_WIDTH - 2*padding) * imgSlider.size.height / imgSlider.size.width;
    heightSlider = hImgSlider + 30.0 + 50.0;
    
    clvSliders.backgroundColor = ORANGE_COLOR;
    clvSliders.layer.cornerRadius = 10.0;
    clvSliders.clipsToBounds = TRUE;
    [clvSliders mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(clvPromotions.mas_bottom).offset(padding);
        make.left.equalTo(clvPromotions);
        make.width.mas_equalTo(SCREEN_WIDTH - 2*padding);
        make.height.mas_equalTo(heightSlider);
    }];
    
    tbQuestions.scrollEnabled = FALSE;
    tbQuestions.backgroundColor = UIColor.whiteColor;
    tbQuestions.delegate = self;
    tbQuestions.dataSource = self;
    [tbQuestions registerNib:[UINib nibWithNibName:@"QuesttionTbvCell" bundle:nil] forCellReuseIdentifier:@"QuesttionTbvCell"];
    [tbQuestions mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(clvSliders.mas_bottom).offset(padding);
        make.left.right.equalTo(bgHosting);
        make.height.mas_equalTo(0);
    }];
    
    hTopContent = hBackground + (sizeBlock - 35.0) + padding + heightPromotion + padding + heightSlider + padding;
    scvContent.contentSize = CGSizeMake(SCREEN_WIDTH, hTopContent);
}

- (IBAction)icBackClick:(UIButton *)sender {
    [self.navigationController popViewControllerAnimated: TRUE];
}

- (IBAction)icCartClick:(UIButton *)sender {
}

- (void)whenTapOnLinuxView {
    HostingViewController *hostingVC = [[HostingViewController alloc] initWithNibName:@"HostingViewController" bundle:nil];
    hostingVC.curMenu = eMenuLinuxHosting;
    [self.navigationController pushViewController: hostingVC animated:TRUE];
}

- (void)whenTapOnWindowsView {
    HostingViewController *hostingVC = [[HostingViewController alloc] initWithNibName:@"HostingViewController" bundle:nil];
    hostingVC.curMenu = eMenuWindowsHosting;
    [self.navigationController pushViewController: hostingVC animated:TRUE];
}

- (void)whenTapOnWordpressView {
    HostingViewController *hostingVC = [[HostingViewController alloc] initWithNibName:@"HostingViewController" bundle:nil];
    hostingVC.curMenu = eMenuWordpressHosting;
    [self.navigationController pushViewController: hostingVC animated:TRUE];
}

- (void)createListQuestionsIfNeed {
    if (listQuestions == nil) {
        listQuestions = [[NSMutableArray alloc] init];
        
        NSDictionary *question = [[NSDictionary alloc] initWithObjectsAndKeys:@"Táº¡i sao báº¡n nÃªn dÃ¹ng Host Viá»t Nam ?", @"question", @"Vá»i Host Viá»t Nam, tá»c Äá» truy cáº­p táº¡i Viá»t Nam sáº½ nhanh hÆ¡n, dá» dÃ ng ÄÄng kÃ½ vÃ  thanh toÃ¡n. Báº¡n sáº½ khÃ´ng bá» háº¡n cháº¿ vá» rÃ o cáº£n ngÃ´n ngá»¯, quyá»n lá»£i cá»§a báº¡n ÄÆ°á»£c phÃ¡p luáº­t Viá»t Nam báº£o vá».", @"content", nil];
        [listQuestions addObject: question];
        
        NSDictionary *question1 = [[NSDictionary alloc] initWithObjectsAndKeys:@"Account Hosting cá»§a tÃ´i cÃ³ thá» sá»­ dá»¥ng cho nhiá»u tÃªn miá»n ÄÆ°á»£c khÃ´ng?", @"question", @"Äá»i vá»i má»i account hosting, báº¡n cÃ³ thá» dÃ¹ng cho 1 hay nhiá»u tÃªn miá»n tÃ¹y thuá»c vÃ o gÃ³i hosting mÃ  báº¡n sá»­ dá»¥ng lÃ  nhá» hay lá»n. Báº¡n xem thÃ´ng sá» má»¥c (tÃ i khoáº£n FTP, CSDL) trÃªn hosting chÃ­nh lÃ  sá» lÆ°á»£ng tÃªn miá»n ÄÆ°á»£c sá»­ dá»¥ng trong account hosting.", @"content", nil];
        [listQuestions addObject: question1];
        
        NSDictionary *question2 = [[NSDictionary alloc] initWithObjectsAndKeys:@"LÃ m cÃ¡ch nÃ o Äá» tÃ´i cÃ³ thá» quáº£n lÃ½ ÄÆ°á»£c tÃ i khoáº£n hosting cá»§a mÃ¬nh?", @"question",  @"ChÃºng tÃ´i gá»­i thÃ´ng tin tÃ i khoáº£n qua email cá»§a báº¡n vá»i ÄÆ°á»ng dáº«n truy cáº­p, thÃ´ng tin user vÃ  password quáº£n trá».", @"content", nil];
        [listQuestions addObject: question2];
        
        NSDictionary *question3 = [[NSDictionary alloc] initWithObjectsAndKeys:@"Náº¿u khÃ´ng hÃ i lÃ²ng vá»i dá»ch vá»¥ tÃ´i cÃ³ ÄÆ°á»£c hoÃ n láº¡i phÃ­ khÃ´ng?", @"question",  @"ChÃºng tÃ´i sáº½ hoÃ n tráº£ láº¡i 100% sá» tiá»n chÃºng tÃ´i ÄÃ£ nháº­n vá»i Äiá»u kiá»n: lÃ½ do báº¡n khÃ´ng hÃ i lÃ²ng lÃ  ÄÃºng hoáº·c báº¡n khÃ´ng vi pháº¡m quy Äá»nh sá»­ dá»¥ng dá»ch vá»¥ cá»§a chÃºng tÃ´i.", @"content", nil];
        [listQuestions addObject: question3];
        
        NSDictionary *question4 = [[NSDictionary alloc] initWithObjectsAndKeys:@"NhÃ¢n HÃ²a cÃ³ thá» há» trá»£ (support) cÃ¡c khÃ¡ch hÃ ng cá»§a tÃ´i khÃ´ng?", @"question",  @"NhÃ¢n HÃ²a sáº½ Äáº£m báº£o má»i cÃ´ng tÃ¡c support liÃªn quan. Báº¡n cÃ³ thá» liÃªn há» trá»±c tiáº¿p vá»i chÃºng tÃ´i Äá» support cho cÃ¡c khÃ¡ch hÃ ng cá»§a báº¡n. KhÃ¡ch hÃ ng cá»§a báº¡n cÅ©ng cÃ³ thá» liÃªn há» vá»i chÃºng tÃ´i Äá» yÃªu cáº§u support.", @"content", nil];
        [listQuestions addObject: question4];
        
        
        NSDictionary *question5 = [[NSDictionary alloc] initWithObjectsAndKeys:@"Sau bao lÃ¢u ká» tá»« khi thanh toÃ¡n tÃ´i cÃ³ thá» sá»­ dá»¥ng dá»ch vá»¥ hosting?", @"question",  @"ThÃ´ng thÆ°á»ng sau 30 phÃºt Äáº¿n 1 tiáº¿ng ká» tá»« khi chÃºng tÃ´i nháº­n ÄÆ°á»£c thanh toÃ¡n thÃ¬ bÃªn báº¡n sáº½ nháº­n ÄÆ°á»£c thÃ´ng tin quáº£n lÃ½ hosting thÃ´ng qua email cá»§a mÃ¬nh.", @"content", nil];
        [listQuestions addObject: question5];
        
        NSDictionary *question6 = [[NSDictionary alloc] initWithObjectsAndKeys:@"TÃ´i cÃ³ thá» cÃ i Äáº·t diá»n ÄÃ n trÃªn tÃ i khoáº£n hosting cá»§a tÃ´i khÃ´ng?", @"question",  @"Báº¡n cÃ³ thá» cÃ i Äáº·t diá»n ÄÃ n lÃªn tÃ i khoáº£n hosting cá»§a báº¡n nhÆ°ng pháº£i tuÃ¢n theo cÃ¡c quy Äá»nh sá»­ dá»¥ng dá»ch vá»¥ cá»§a chÃºng tÃ´i. Tham kháº£o Quy Äá»nh sá»­ dá»¥ng dá»ch vá»¥", @"content", nil];
        [listQuestions addObject: question6];
        
        
        NSDictionary *question7 = [[NSDictionary alloc] initWithObjectsAndKeys:@"TÃ´i cÃ³ thá» nÃ¢ng cáº¥p gÃ³i dá»ch vá»¥ hosting tÃ´i Äang dÃ¹ng ÄÆ°á»£c khÃ´ng?", @"question",  @"ChÃºng tÃ´i cÃ³ thá» tiáº¿n hÃ nh nÃ¢ng cáº¥p tÃ i khoáº£n hosing cá»§a báº¡n trong vÃ²ng 5 phÃºt mÃ  khÃ´ng anh hÆ°á»ng tá»i hoáº¡t Äá»ng cá»§a web site. HÆ¡n ná»¯a khoáº£n phÃ­ chÆ°a sá»­ dá»¥ng Äáº¿n cá»§a gÃ³i hosting trÆ°á»c sáº½ ÄÆ°á»£c tÃ­nh cho gÃ³i hosting má»i ÄÆ°á»£c nÃ¢ng cáº¥p.", @"content", nil];
        [listQuestions addObject: question7];
        
        NSDictionary *question8 = [[NSDictionary alloc] initWithObjectsAndKeys:@"TÃ´i cÃ³ thá» sang nhÆ°á»£ng, cho, bÃ¡n láº¡i dá»ch vá»¥ khÃ´ng?", @"question", @"Báº¡n toÃ n quyá»n sang nhÆ°á»£ng, cho, bÃ¡n láº¡i dá»ch vá»¥ ÄÃ£ ÄÄng kÃ½ sá»­ dá»¥ng vÃ  pháº£i thÃ´ng bÃ¡o cho chÃºng tÃ´i báº±ng vÄn báº£n kÃ¨m theo thÃ´ng tin vá» chá»§ sá» há»¯u má»i.", @"content",  nil];
        [listQuestions addObject: question8];
        
        NSDictionary *question9 = [[NSDictionary alloc] initWithObjectsAndKeys:@"TÃ´i cÃ³ thá» yÃªu cáº§u há» trá»£ tá»« NhÃ¢n HÃ²a nhÆ° tháº¿ nÃ o?", @"question", @"Báº¡n cÃ³ thá» yÃªu cáº§u há» trá»£ tá»« chÃºng tÃ´i thÃ´ng qua há» thá»ng há» trá»£ trá»±c tuyáº¿n trÃªn website, há» thá»ng support ticket hoáº·c LiÃªn há» trá»±c tiáº¿p vá»i chÃºng tÃ´i.", @"content",  nil];
        [listQuestions addObject: question9];
    }
}

- (void)setFrameForContentViewWithTableHeight {
    float hTableView = [self getHeightForTableView] + hSection;
    [tbQuestions mas_updateConstraints:^(MASConstraintMaker *make) {
        make.height.mas_equalTo(hTableView);
    }];
    scvContent.contentSize = CGSizeMake(SCREEN_WIDTH, hTopContent + hTableView);
}

#pragma mark - UICollectionview menu
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView {
    return 1;
}

-(NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section {
    return 1;
}

-(UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath {
    if (collectionView == clvPromotions) {
        HostingPromotionClvCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"HostingPromotionClvCell" forIndexPath:indexPath];
        
        return cell;
    }else {
        HostingSliderClvCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"HostingSliderClvCell" forIndexPath:indexPath];
        cell.lbTitle.text = @"VÃ¬ sao nÃªn thuÃª hosting NhÃ¢n HÃ²a";
        cell.lbContent.text = @"Vá»i bá» dÃ y kinh nghiá»m, NhÃ¢n HÃ²a luÃ´n náº±m trong top Äáº§u cÃ¡c ÄÆ¡n vá» cÃ¹ng lÄ©nh vá»±c cung cáº¥p dá»ch vá»¥ chuyÃªn nghiá»p nháº¥t.";
        return cell;
    }
}

- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
    
}

- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath
{
    if (collectionView == clvPromotions) {
        return CGSizeMake(SCREEN_WIDTH - 2*padding, heightPromotion);
    }else {
        return CGSizeMake(SCREEN_WIDTH - 2*padding, heightSlider);
    }
}

-(CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section {
    return 0;
}

-(UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout insetForSectionAtIndex:(NSInteger)section {
    return UIEdgeInsetsZero;
}

#pragma mark - UITableview delegate
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 1;
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return listQuestions.count;
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    QuesttionTbvCell *cell = [tableView dequeueReusableCellWithIdentifier:@"QuesttionTbvCell"];
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    
    NSDictionary *info = [listQuestions objectAtIndex: indexPath.row];
    NSString *question = [info objectForKey:@"question"];
    NSString *content = [info objectForKey:@"content"];
    
    cell.lbTitle.text = question;
    cell.lbContent.text = content;
    
    if (selectedIndex == indexPath.row) {
        [cell updateUIForSelected: TRUE];
    }else{
        [cell updateUIForSelected: FALSE];
    }
    
    return cell;
}

-(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
    UIView *viewSection = [[UIView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, hSection)];
    
    UILabel *lbSection = [[UILabel alloc] init];
    lbSection.text = @"Há»i ÄÃ¡p vá» Hosting";
    lbSection.font = textFont;
    lbSection.textColor = GRAY_80;
    [viewSection addSubview: lbSection];
    [lbSection mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.bottom.equalTo(viewSection);
        make.left.equalTo(viewSection).offset(padding);
        make.right.equalTo(viewSection).offset(-padding);
    }];
    
    return viewSection;
}


-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    if (indexPath.row == selectedIndex) {
        selectedIndex = -1;
    }else{
        selectedIndex = (int)indexPath.row;
    }
    [tbQuestions reloadData];
    [self setFrameForContentViewWithTableHeight];
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    if (selectedIndex == indexPath.row) {
        return [self getHeghtForRowAtIndex: (int)indexPath.row selected: TRUE];
    }else{
        return [self getHeghtForRowAtIndex: (int)indexPath.row selected: FALSE];
    }
}

-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    return hSection;
}

- (float)getHeghtForRowAtIndex: (int)index selected: (BOOL)selected {
    NSDictionary *info = [listQuestions objectAtIndex: index];
    NSString *question = [info objectForKey:@"question"];
    NSString *content = [info objectForKey:@"content"];
    
    float maxSize = (SCREEN_WIDTH - 3*padding - 18.0);
    float hTitle = [AppUtils getSizeWithText:question withFont:fontForGetHeight andMaxWidth:maxSize].height;
    float hTop = padding + hTitle + padding + 1.0;
    
    if (index == selectedIndex) {
        float hContent = [AppUtils getSizeWithText:content withFont:[UIFont fontWithName:RobotoRegular size:fontForGetHeight.pointSize-1] andMaxWidth:(SCREEN_WIDTH - 2*padding)].height + 5.0;
        return hTop + padding + hContent + padding;
    }else{
        return hTop;
    }
}

- (float)getHeightForTableView {
    float hTableView = 0;
    for (int index=0; index<listQuestions.count; index++) {
        if (index == selectedIndex) {
            hTableView += [self getHeghtForRowAtIndex:index selected:TRUE];
        }else{
            hTableView += [self getHeghtForRowAtIndex:index selected:FALSE];
        }
    }
    return hTableView;
}

#pragma mark - UIScrollview delegate
-(void)scrollViewDidScroll:(UIScrollView *)scrollView {
    if (scrollView.contentOffset.y < 0) {
        scrollView.contentOffset = CGPointZero;
    }
}

@end
