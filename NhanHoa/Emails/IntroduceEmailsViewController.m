//
//  IntroduceEmailsViewController.m
//  NhanHoa
//
//  Created by OS on 11/12/19.
//  Copyright Â© 2019 Nhan Hoa. All rights reserved.
//

#import "IntroduceEmailsViewController.h"
#import "EmailsViewController.h"
#import "PromotionClvCell.h"
#import "QuesttionTbvCell.h"

@interface IntroduceEmailsViewController ()<UIScrollViewDelegate, UICollectionViewDelegate, UICollectionViewDataSource, UITableViewDelegate, UITableViewDataSource>
{
    AppDelegate *appDelegate;
    float padding;
    UIFont *fontForGetHeight;
    float hBlock;
    float heightSlider;
    float hTopContent;
    
    NSMutableArray *listQuestions;
    int selectedIndex;
    float hSection;
    
    UIFont *textFont;
}
@end

@implementation IntroduceEmailsViewController
@synthesize scvContent, bgHeader, lbTitle, viewHeader, icBack, lbHeader, icCart, lbCount, viewMenu, viewEmailHosting, imgEmailHosting, lbEmailHosting, viewEmailGoogle, imgEmailGoogle, lbEmailGoogle, viewEmailMicrosoft, imgEmailMicrosoft, lbEmailMicrosoft, viewEmailServerRieng, imgEmailServerRieng, lbEmailServerRieng, clvSliders, tbQuestions;

- (void)viewDidLoad {
    [super viewDidLoad];
    appDelegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    [self setupUIForView];
}

-(void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear: animated];
    lbHeader.text = [appDelegate.localization localizedStringForKey:@"Register Email"];
    [self createListQuestionsIfNeed];
    selectedIndex = -1;
    
    [self setFrameForContentViewWithTableHeight];
    [self updateCartCountForView];
}

- (void)updateCartCountForView {
    if ([[CartModel getInstance] countItemInCart] == 0) {
        lbCount.hidden = TRUE;
    }else{
        lbCount.hidden = FALSE;
        lbCount.text = SFM(@"%d", [[CartModel getInstance] countItemInCart]);
    }
}

- (IBAction)icBackClick:(UIButton *)sender {
    [self.navigationController popViewControllerAnimated: TRUE];
}

- (IBAction)icCartClick:(UIButton *)sender {
}

- (void)setupUIForView
{
    float hStatus = [UIApplication sharedApplication].statusBarFrame.size.height;
    padding = 15.0;
    
    textFont = [UIFont fontWithName:RobotoBold size:22.0];
    float hIcon = 30.0;
    hBlock = 100.0;
    hSection = 60.0;
    
    fontForGetHeight = [UIFont fontWithName:RobotoRegular size:22.0];
    if (SCREEN_WIDTH <= SCREEN_WIDTH_IPHONE_5) {
        textFont = [UIFont fontWithName:RobotoBold size:18.0];
        fontForGetHeight = [UIFont fontWithName:RobotoRegular size:16.0];
        hIcon = 18.0;
        hBlock = 60.0;
        icCart.imageEdgeInsets = UIEdgeInsetsMake(7, 7, 7, 7);
        
    }else if (SCREEN_WIDTH <= SCREEN_WIDTH_IPHONE_6){
        textFont = [UIFont fontWithName:RobotoBold size:20.0];
        fontForGetHeight = [UIFont fontWithName:RobotoRegular size:18.0];
        hIcon = 24.0;
        hBlock = 80.0;
        icCart.imageEdgeInsets = UIEdgeInsetsMake(6, 6, 6, 6);
        
    }else if (SCREEN_WIDTH <= SCREEN_WIDTH_IPHONE_6PLUS){
        textFont = [UIFont fontWithName:RobotoBold size:22.0];
        fontForGetHeight = [UIFont fontWithName:RobotoRegular size:20.0];
        hIcon = 30.0;
        hBlock = 100.0;
        icCart.imageEdgeInsets = UIEdgeInsetsMake(5, 5, 5, 5);
    }
    
    if (@available(iOS 11.0, *)) {
        scvContent.contentInsetAdjustmentBehavior = UIScrollViewContentInsetAdjustmentNever;
    }
    scvContent.delegate = self;
    scvContent.backgroundColor = [UIColor colorWithRed:(240/255.0) green:(240/255.0) blue:(240/255.0) alpha:1.0];
    [scvContent mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.left.bottom.right.equalTo(self.view);
    }];
    
    UIImage *imgHeader = [UIImage imageNamed:@"bg_email"];
    float hBackground = SCREEN_WIDTH * imgHeader.size.height/imgHeader.size.width;
    bgHeader.backgroundColor = UIColor.clearColor;
    [bgHeader mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.left.equalTo(scvContent);
        make.width.mas_equalTo(SCREEN_WIDTH);
        make.height.mas_equalTo(hBackground);
    }];
    
    //  header
    [viewHeader mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(scvContent).offset(hStatus);
        make.left.right.equalTo(bgHeader);
        make.height.mas_equalTo(self.navigationController.navigationBar.frame.size.height);
    }];

    //  header
    lbHeader.font = textFont;
    [lbHeader mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.bottom.equalTo(viewHeader);
        make.centerX.equalTo(viewHeader.mas_centerX);
        make.width.mas_equalTo(250.0);
    }];

    icBack.imageEdgeInsets = UIEdgeInsetsMake(7, 7, 7, 7);
    [icBack mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(viewHeader).offset(5.0);
        make.centerY.equalTo(lbHeader.mas_centerY);
        make.width.height.mas_equalTo(40.0);
    }];

    [icCart mas_makeConstraints:^(MASConstraintMaker *make) {
        make.right.equalTo(viewHeader).offset(-padding+5.0);
        make.centerY.equalTo(lbHeader.mas_centerY);
        make.width.height.mas_equalTo(40.0);
    }];

    lbCount.textColor = UIColor.whiteColor;
    lbCount.backgroundColor = ORANGE_COLOR;
    lbCount.layer.cornerRadius = appDelegate.sizeCartCount/2;
    lbCount.clipsToBounds = TRUE;
    lbCount.font = [UIFont fontWithName:RobotoRegular size:textFont.pointSize - 5.0];
    [lbCount mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(icCart).offset(-3.0);
        make.right.equalTo(icCart).offset(3.0);
        make.width.height.mas_equalTo(appDelegate.sizeCartCount);
    }];

    //  view content
    viewMenu.layer.cornerRadius = 10.0;
    viewMenu.clipsToBounds = TRUE;
    lbEmailHosting.font = lbEmailGoogle.font = lbEmailMicrosoft.font = lbEmailServerRieng.font = [UIFont fontWithName:RobotoMedium size:textFont.pointSize-3];
    lbEmailHosting.textColor = lbEmailGoogle.textColor = lbEmailMicrosoft.textColor = lbEmailServerRieng.textColor = GRAY_80;

    float widthBlock = (SCREEN_WIDTH - 2*padding - 7.0)/2;

    //  view menu
    viewMenu.backgroundColor = UIColor.clearColor;
    [viewMenu mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(bgHeader.mas_bottom).offset(-40.0);
        make.left.equalTo(bgHeader).offset(padding);
        make.right.equalTo(bgHeader).offset(-padding);
        make.height.mas_equalTo(2*hBlock + 7.0);
    }];
    
    //  email hosting
    UIImage *imgIcon = [UIImage imageNamed:@"ic_email_hosting"];
    float wIcon = (hIcon+3) * imgIcon.size.width / imgIcon.size.height;
    
    UITapGestureRecognizer *tapOnEmailHosting = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(whenTapOnEmailHosting)];
    [viewEmailHosting addGestureRecognizer: tapOnEmailHosting];
    [viewEmailHosting mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.left.equalTo(viewMenu);
        make.width.mas_equalTo(widthBlock);
        make.height.mas_equalTo(hBlock);
    }];
    
    [imgEmailHosting mas_makeConstraints:^(MASConstraintMaker *make) {
        make.bottom.equalTo(viewEmailHosting.mas_centerY).offset(-2.0);
        make.centerX.equalTo(viewEmailHosting.mas_centerX);
        make.height.mas_equalTo(hIcon+3);
        make.width.mas_equalTo(wIcon);
    }];

    [lbEmailHosting mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(viewEmailHosting.mas_centerY).offset(5.0);
        make.left.equalTo(viewEmailHosting).offset(2.0);
        make.right.equalTo(viewEmailHosting).offset(-2.0);
    }];

    //  email google
    UITapGestureRecognizer *tapOnEmailGoogle = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(whenTapOnEmailGoogle)];
    [viewEmailGoogle addGestureRecognizer: tapOnEmailGoogle];
    [viewEmailGoogle mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.right.equalTo(viewMenu);
        make.width.mas_equalTo(widthBlock);
        make.height.mas_equalTo(hBlock);
    }];

    imgIcon = [UIImage imageNamed:@"ic_email_google"];
    wIcon = hIcon * imgIcon.size.width / imgIcon.size.height;
    [imgEmailGoogle mas_makeConstraints:^(MASConstraintMaker *make) {
        make.bottom.equalTo(viewEmailGoogle.mas_centerY).offset(-2.0);
        make.centerX.equalTo(viewEmailGoogle.mas_centerX);
        make.height.mas_equalTo(hIcon);
        make.width.mas_equalTo(wIcon);
    }];

    [lbEmailGoogle mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(viewEmailGoogle.mas_centerY).offset(5.0);
        make.left.equalTo(viewEmailGoogle).offset(2.0);
        make.right.equalTo(viewEmailGoogle).offset(-2.0);
    }];

    //  email microsoft
    UITapGestureRecognizer *tapOnEmailMicrosoft = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(whenTapOnEmailMicrosoft)];
    [viewEmailMicrosoft addGestureRecognizer: tapOnEmailMicrosoft];
    [viewEmailMicrosoft mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.bottom.equalTo(viewMenu);
        make.width.mas_equalTo(widthBlock);
        make.height.mas_equalTo(hBlock);
    }];

    imgIcon = [UIImage imageNamed:@"ic_email_microsoft"];
    wIcon = (hIcon + 5) * imgIcon.size.width / imgIcon.size.height;
    [imgEmailMicrosoft mas_makeConstraints:^(MASConstraintMaker *make) {
        make.bottom.equalTo(viewEmailMicrosoft.mas_centerY).offset(-2.0);
        make.centerX.equalTo(viewEmailMicrosoft.mas_centerX);
        make.height.mas_equalTo(hIcon + 5);
        make.width.mas_equalTo(wIcon);
    }];

    [lbEmailMicrosoft mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(viewEmailMicrosoft.mas_centerY).offset(5.0);
        make.left.equalTo(viewEmailMicrosoft).offset(2.0);
        make.right.equalTo(viewEmailMicrosoft).offset(-2.0);
    }];

    //  email server rieng
    UITapGestureRecognizer *tapOnEmailServer = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(whenTapOnEmailServer)];
    [viewEmailServerRieng addGestureRecognizer: tapOnEmailServer];
    [viewEmailServerRieng mas_makeConstraints:^(MASConstraintMaker *make) {
        make.right.bottom.equalTo(viewMenu);
        make.width.mas_equalTo(widthBlock);
        make.height.mas_equalTo(hBlock);
    }];

    imgIcon = [UIImage imageNamed:@"ic_email_server"];
    wIcon = (hIcon+8) * imgIcon.size.width / imgIcon.size.height;
    [imgEmailServerRieng mas_makeConstraints:^(MASConstraintMaker *make) {
        make.bottom.equalTo(viewEmailServerRieng.mas_centerY).offset(-2.0);
        make.centerX.equalTo(viewEmailServerRieng.mas_centerX);
        make.height.mas_equalTo(hIcon+8);
        make.width.mas_equalTo(wIcon);
    }];

    [lbEmailServerRieng mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(viewEmailServerRieng.mas_centerY).offset(5.0);
        make.left.equalTo(viewEmailServerRieng).offset(2.0);
        make.right.equalTo(viewEmailServerRieng).offset(-2.0);
    }];

    //  lbtitle
    lbTitle.font = [UIFont fontWithName:RobotoMedium size:textFont.pointSize];
    [lbTitle mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.right.equalTo(viewMenu);
        make.bottom.equalTo(viewMenu.mas_top).offset(-padding);
        make.height.mas_equalTo(30.0);
    }];

    //  sliders
    UICollectionViewFlowLayout *layoutSlider = [[UICollectionViewFlowLayout alloc] init];
    layoutSlider.minimumLineSpacing = 0;
    layoutSlider.minimumInteritemSpacing = 0;
    layoutSlider.scrollDirection =  UICollectionViewScrollDirectionHorizontal;

    clvSliders.collectionViewLayout = layoutSlider;
    clvSliders.delegate = self;
    clvSliders.dataSource = self;
    [clvSliders registerNib:[UINib nibWithNibName:@"PromotionClvCell" bundle:nil] forCellWithReuseIdentifier:@"PromotionClvCell"];
    clvSliders.showsHorizontalScrollIndicator = FALSE;
    clvSliders.pagingEnabled = TRUE;

    UIImage *imgSlider = [UIImage imageNamed:@"hosting_slider"];
    float hImgSlider = (SCREEN_WIDTH - 2*padding) * imgSlider.size.height / imgSlider.size.width;
    heightSlider = hImgSlider + 30.0 + 50.0;

    clvSliders.layer.cornerRadius = 10.0;
    clvSliders.clipsToBounds = TRUE;
    [clvSliders mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(viewMenu.mas_bottom).offset(padding);
        make.left.right.equalTo(viewMenu);
        make.height.mas_equalTo(heightSlider);
    }];

    tbQuestions.scrollEnabled = FALSE;
    tbQuestions.backgroundColor = UIColor.whiteColor;
    tbQuestions.separatorStyle = UITableViewCellSeparatorStyleNone;
    tbQuestions.delegate = self;
    tbQuestions.dataSource = self;
    [tbQuestions registerNib:[UINib nibWithNibName:@"QuesttionTbvCell" bundle:nil] forCellReuseIdentifier:@"QuesttionTbvCell"];
    [tbQuestions mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(clvSliders.mas_bottom).offset(padding);
        make.left.right.equalTo(bgHeader);
        make.height.mas_equalTo(0);
    }];

    hTopContent = hBackground + ((2*hBlock + 10) - 40.0) + padding + heightSlider + padding;
    scvContent.contentSize = CGSizeMake(SCREEN_WIDTH, hTopContent);
}

- (void)whenTapOnEmailHosting {
    EmailsViewController *emailsVC = [[EmailsViewController alloc] initWithNibName:@"EmailsViewController" bundle:nil];
    [self.navigationController pushViewController:emailsVC animated:TRUE];
}

- (void)whenTapOnEmailGoogle {
    EmailsViewController *emailsVC = [[EmailsViewController alloc] initWithNibName:@"EmailsViewController" bundle:nil];
    [self.navigationController pushViewController:emailsVC animated:TRUE];
}

- (void)whenTapOnEmailMicrosoft {
    EmailsViewController *emailsVC = [[EmailsViewController alloc] initWithNibName:@"EmailsViewController" bundle:nil];
    [self.navigationController pushViewController:emailsVC animated:TRUE];
}

- (void)whenTapOnEmailServer {
    EmailsViewController *emailsVC = [[EmailsViewController alloc] initWithNibName:@"EmailsViewController" bundle:nil];
    [self.navigationController pushViewController:emailsVC animated:TRUE];
}

- (void)setFrameForContentViewWithTableHeight {
    float hTableView = [self getHeightForTableView] + hSection;
    [tbQuestions mas_updateConstraints:^(MASConstraintMaker *make) {
        make.height.mas_equalTo(hTableView);
    }];
    scvContent.contentSize = CGSizeMake(SCREEN_WIDTH, hTopContent + hTableView);
}

- (float)getHeghtForRowAtIndex: (int)index selected: (BOOL)selected {
    NSDictionary *info = [listQuestions objectAtIndex: index];
    NSString *question = [info objectForKey:@"question"];
    NSString *content = [info objectForKey:@"content"];
    
    float maxSize = (SCREEN_WIDTH - 3*padding - 18.0);
    float hTitle = [AppUtils getSizeWithText:question withFont:fontForGetHeight andMaxWidth:maxSize].height;
    float hTop = padding + hTitle + padding + 1.0;
    
    if (index == selectedIndex) {
        float hContent = [AppUtils getSizeWithText:content withFont:[UIFont fontWithName:RobotoRegular size:fontForGetHeight.pointSize-1] andMaxWidth:(SCREEN_WIDTH - 2*padding)].height + 5.0;
        return hTop + padding + hContent + padding;
    }else{
        return hTop;
    }
}

- (float)getHeightForTableView {
    float hTableView = 0;
    for (int index=0; index<listQuestions.count; index++) {
        if (index == selectedIndex) {
            hTableView += [self getHeghtForRowAtIndex:index selected:TRUE];
        }else{
            hTableView += [self getHeghtForRowAtIndex:index selected:FALSE];
        }
    }
    return hTableView;
}

- (void)createListQuestionsIfNeed {
    if (listQuestions == nil) {
        listQuestions = [[NSMutableArray alloc] init];
        
        NSDictionary *question = [[NSDictionary alloc] initWithObjectsAndKeys:@"Táº¡i sao báº¡n nÃªn dÃ¹ng Host Viá»t Nam?", @"question", @"Vá»i Host Viá»t Nam, tá»c Äá» truy cáº­p táº¡i Viá»t Nam sáº½ nhanh hÆ¡n, dá» dÃ ng ÄÄng kÃ½ vÃ  thanh toÃ¡n. Báº¡n sáº½ khÃ´ng bá» háº¡n cháº¿ vá» rÃ o cáº£n ngÃ´n ngá»¯, quyá»n lá»£i cá»§a báº¡n ÄÆ°á»£c phÃ¡p luáº­t Viá»t Nam báº£o vá».", @"content", nil];
        [listQuestions addObject: question];
        
        NSDictionary *question1 = [[NSDictionary alloc] initWithObjectsAndKeys:@"Account Hosting cá»§a tÃ´i cÃ³ thá» sá»­ dá»¥ng cho nhiá»u tÃªn miá»n ÄÆ°á»£c khÃ´ng?", @"question", @"Äá»i vá»i má»i account hosting, báº¡n cÃ³ thá» dÃ¹ng cho 1 hay nhiá»u tÃªn miá»n tÃ¹y thuá»c vÃ o gÃ³i hosting mÃ  báº¡n sá»­ dá»¥ng lÃ  nhá» hay lá»n. Báº¡n xem thÃ´ng sá» má»¥c (tÃ i khoáº£n FTP, CSDL) trÃªn hosting chÃ­nh lÃ  sá» lÆ°á»£ng tÃªn miá»n ÄÆ°á»£c sá»­ dá»¥ng trong account hosting.", @"content", nil];
        [listQuestions addObject: question1];
        
        NSDictionary *question2 = [[NSDictionary alloc] initWithObjectsAndKeys:@"Email hosting lÃ  gÃ¬?", @"question",  @"Mail hosting lÃ  dá»ch vá»¥ lÆ°u trá»¯ phá»¥c vá»¥ cho viá»c dÃ¹ng email cá»§a báº¡n, mail hosting luÃ´n sáº³n sÃ ng cho viá»c gá»­i vÃ  nháº­n mail cá»§a báº¡n báº¥n ká»³ lÃºc nÃ o, ngay cáº£ khi báº¡n khÃ´ng dÃ¹ng mail thÃ¬ mÃ¡y chá»§ váº«n hoáº¡t Äá»ng vá»i vai trÃ² nhÆ° há»p thÆ°, Äáº£m báº£o mail ÄÆ°á»£c gá»­i tá»i báº¡n lÃºc nÃ o cÅ©ng ÄÆ°á»£c.", @"content", nil];
        [listQuestions addObject: question2];
        
        
        NSDictionary *question3 = [[NSDictionary alloc] initWithObjectsAndKeys:@"E-mail gá»i tháº¿ nÃ o bá» gá»i lÃ  spam?", @"question",  @"E-mail bá» ÄÃ¡nh giÃ¡ lÃ  spam thÆ°á»ng lÃ  do ngÆ°á»i nháº­n (Yahoo/Gmail/Hotmail/AOLâ¦) ÄÃ¡nh giÃ¡ báº±ng cÃ¡ch nháº¥n vÃ o nÃºt ÄÃ¡nh dáº¥u Spam (Mark as Spam), vÃ¬ váº­y khÃ´ng pháº£i do mÃ¡y mÃ³c kiá»m soÃ¡t mÃ  lÃ  do sá»± pháº£n há»i cá»§a ngÆ°á»i nháº­n ÄÆ°á»£c Mail.Viá»c bá» liá»t vÃ o spam cÃ²n phá»¥ thuá»c vÃ o danh sÃ¡ch ngÆ°á»i nháº­n cÃ³ Äá»ng thuáº­n nháº­n ná»i dung báº¡n gá»­i khÃ´ng.", @"content", nil];
        [listQuestions addObject: question3];
        
        NSDictionary *question4 = [[NSDictionary alloc] initWithObjectsAndKeys:@"SSL trong Pro Mail Äá» lÃ m gÃ¬?", @"question",  @"Chá»©ng thá»±c SSL trong káº¿t ná»i POP3, SMTP, IMAP, WebMail giÃºp thÃ´ng tin email truyá»n Äi ÄÆ°á»£c mÃ£ hÃ³a, trÃ¡nh viá»c nghe lÃ©n dá»¯ liá»u trong quÃ¡ trÃ¬nh truyá»n Äi.", @"content", nil];
        [listQuestions addObject: question4];
        
        NSDictionary *question5= [[NSDictionary alloc] initWithObjectsAndKeys:@"BÄng thÃ´ng Hosting lÃ  gÃ¬?", @"question",  @"BÄng thÃ´ng hosting ÄÆ°á»£c hiá»u lÃ  tá»ng lÆ°u lÆ°á»£ng dá»¯ liá»u ÄÆ°á»£c truyá»n up/down qua hostingÄÆ¡n vá» thÆ°á»ng dÃ¹ng lÃ  MB hay GB.", @"content", nil];
        [listQuestions addObject: question5];
        
        NSDictionary *question6 = [[NSDictionary alloc] initWithObjectsAndKeys:@"Dung lÆ°á»£ng hosting lÃ  gÃ¬?", @"question",  @"Dung lÆ°á»£ng hosting lÃ  tá»ng sá» MB mÃ  báº¡n sá»­ dá»¥ng Äá» lÆ°u trá»¯ dá»¯ liá»u trÃªn hosting cá»§a báº¡nDung lÆ°á»£ng ÄÆ°á»£c tÃ­nh trÃªn táº¥t cáº£ cÃ¡c táº­p tin thuá»c thÆ° má»¥c gá»c vÃ  thÆ° má»¥c con trÃªn hosting cá»§a báº¡n, bao gá»m web, mail, log, ...", @"content", nil];
        [listQuestions addObject: question6];
        
        NSDictionary *question7 = [[NSDictionary alloc] initWithObjectsAndKeys:@"TÃ´i cÃ³ thá» nÃ¢ng cáº¥p gÃ³i dá»ch vá»¥ hosting tÃ´i Äang dÃ¹ng ÄÆ°á»£c khÃ´ng?", @"question",  @"ChÃºng tÃ´i cÃ³ thá» tiáº¿n hÃ nh nÃ¢ng cáº¥p tÃ i khoáº£n hosing cá»§a báº¡n trong vÃ²ng 5 phÃºt mÃ  khÃ´ng anh hÆ°á»ng tá»i hoáº¡t Äá»ng cá»§a web site. HÆ¡n ná»¯a khoáº£n phÃ­ chÆ°a sá»­ dá»¥ng Äáº¿n cá»§a gÃ³i hosting trÆ°á»c sáº½ ÄÆ°á»£c tÃ­nh cho gÃ³i hosting má»i ÄÆ°á»£c nÃ¢ng cáº¥p.", @"content", nil];
        [listQuestions addObject: question7];
        
        NSDictionary *question8 = [[NSDictionary alloc] initWithObjectsAndKeys:@"VÃ¬ sao láº¡i Email Hosting trong khi dá»ch vá»¥ Web Hosting cÅ©ng cÃ³ Email?", @"question",  @"Email Hosting lÃ  dá»ch vá»¥ chuyÃªn dá»¥ng, chÃºng tÃ´i thiáº¿t káº¿ riÃªng cá»¥m mÃ¡y chá»§ chá» dÃ¹ng cho Email nÃªn viá»c sá»­ dá»¥ng cháº¯c cháº¯n sáº½ cÃ³ nhiá»u khÃ¡c biá»t. Báº¡n cÃ³ thá» quan tÃ¢m nhá»¯ng váº¥n Äá» sau:\n - CÃ³ mÃ¡y chá»§ dá»± phÃ²ng trong trÆ°á»ng há»£p cÃ³ sá»± cá».\n - Email ÄÃ­nh kÃ¨m táº­p tin lá»n gá»i nhanh hÆ¡n ráº¥t nhiá»u, dung lÆ°á»£ng há»p thÆ° lá»n hÆ¡n.\n - Nhiá»u tÃ­nh nÄng, thÃ´ng sá» Äá» ngÆ°á»i quáº£n trá» kiá»m soÃ¡t ngÆ°á»i dÃ¹ng vÃ  thÆ° tá»«.\n - Email kÃ¨m theo Web Hosting ÄÆ°á»£c cung cáº¥p khÃ´ng cÃ³ sá»± rÃ ng buá»c vá» cháº¥t lÆ°á»£ng. TrÃªn thá»±c táº¿, cÃ³ khÃ¡ nhiá»u khÃ¡ch hÃ ng lá»£i dung Email nÃ y Äá» gá»i thÆ° rÃ¡c, quáº£ng cÃ¡o... Äiá»u nÃ y sáº½ áº£nh hÆ°á»ng Äáº¿n nhá»¯ng ngÆ°á»i dÃ¹ng khÃ¡c trÃªn cÃ¹ng Server, cÃ³ thá» lÃ  báº¡n?", @"content", nil];
        [listQuestions addObject: question8];
        
        NSDictionary *question9 = [[NSDictionary alloc] initWithObjectsAndKeys:@"TÃ´i cÃ³ thá» yÃªu cáº§u há» trá»£ tá»« NhÃ¢n HÃ²a nhÆ° tháº¿ nÃ o?", @"question",  @"Báº¡n cÃ³ thá» yÃªu cáº§u há» trá»£ tá»« chÃºng tÃ´i thÃ´ng qua há» thá»ng há» trá»£ trá»±c tuyáº¿n trÃªn website, há» thá»ng support ticket hoáº·c LiÃªn há» trá»±c tiáº¿p vá»i chÃºng tÃ´i.", @"content", nil];
        [listQuestions addObject: question9];
    }
}

#pragma mark - UICollectionview menu
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView {
    return 1;
}

-(NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section {
    return 1;
}

-(UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath {
    PromotionClvCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"PromotionClvCell" forIndexPath:indexPath];
    cell.lbTitle.text = @"Giá»i thiá»u dá»ch vá»¥ Email NhÃ¢n HÃ²a";
    cell.lbContent.text = @"Äá» cÃ³ má»t há» thá»ng email chuyÃªn nghiá»p, tin cáº­y cÃ¡c tá» chá»©c/ doanh nghiá»p nÃªn sá»­ dá»¥ng dá»ch vá»¥ email tá»« cÃ¡c nhÃ  cung cáº¥p cÃ³ uy tÃ­n vÃ  kinh nghiá»m nhÆ° NhÃ¢n HÃ²a. TÃ¹y theo nhu cáº§u QuÃ½ khÃ¡ch hÃ ng cÃ³ thá» chá»n 1 trong 2 dá»ch vá»¥ Email Hosting hoáº·c Email server cho tá» chá»©c/ doanh nghiá»p cá»§a mÃ¬nh.";
    return cell;
}

- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
    
}

- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath
{
    return CGSizeMake(SCREEN_WIDTH - 2*padding, heightSlider);
}

-(CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section {
    return 0;
}

-(UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout insetForSectionAtIndex:(NSInteger)section {
    return UIEdgeInsetsZero;
}

#pragma mark - UITableview delegate
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 1;
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return listQuestions.count;
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    QuesttionTbvCell *cell = [tableView dequeueReusableCellWithIdentifier:@"QuesttionTbvCell"];
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    
    NSDictionary *info = [listQuestions objectAtIndex: indexPath.row];
    NSString *question = [info objectForKey:@"question"];
    NSString *content = [info objectForKey:@"content"];
    
    cell.lbTitle.text = question;
    cell.lbContent.text = content;
    
    if (selectedIndex == indexPath.row) {
        [cell updateUIForSelected: TRUE];
    }else{
        [cell updateUIForSelected: FALSE];
    }
    
    return cell;
}

-(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
    UIView *viewSection = [[UIView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, hSection)];
    
    UILabel *lbSection = [[UILabel alloc] init];
    lbSection.text = @"CÃ¢u há»i thÆ°á»ng gáº·p vá» Email";
    lbSection.font = textFont;
    lbSection.textColor = GRAY_80;
    [viewSection addSubview: lbSection];
    [lbSection mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.bottom.equalTo(viewSection);
        make.left.equalTo(viewSection).offset(padding);
        make.right.equalTo(viewSection).offset(-padding);
    }];
    
    return viewSection;
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    if (indexPath.row == selectedIndex) {
        selectedIndex = -1;
    }else{
        selectedIndex = (int)indexPath.row;
    }
    [tbQuestions reloadData];
    [self setFrameForContentViewWithTableHeight];
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    if (selectedIndex == indexPath.row) {
        return [self getHeghtForRowAtIndex: (int)indexPath.row selected: TRUE];
    }else{
        return [self getHeghtForRowAtIndex: (int)indexPath.row selected: FALSE];
    }
}

-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    return hSection;
}

#pragma mark - UIScrollview delegate
-(void)scrollViewDidScroll:(UIScrollView *)scrollView {
    if (scrollView.contentOffset.y < 0) {
        scrollView.contentOffset = CGPointZero;
    }
}

@end
